#
# ansible-playbook playbooks/setup-server-web.yml -i playbooks/inventory.txt --ask-pass --ask-become-pass --user=wh --extra-vars="newwebserver=web.example.com"
#
# this will leave your root mysql account without a password so use the following to get a new password prompt ONLY IF THERE IS NO PASSWORD:
# $ mysqladmin -u root password
#

---

- hosts: "{{ newwebserver }}"
  become: yes
  gather_facts: no
  tasks:
  - include: includes/tasks/setup-server-common.yml

  # edit as you need:
  # - if you are using ubuntu 16.04, you'll need the certbot ppa
  # - if you don't have access to php7.1 and want it, you'll need the ondrej ppa
  - name: add ondrej and certbot PPAs
    shell: apt install -y python-software-properties software-properties-common && add-apt-repository -y ppa:ondrej/php && add-apt-repository -y ppa:certbot/certbot

  # in this multiple-playbooks-that-install-things setup, you need to apt update again
  - apt: update_cache=yes

  - name: install webserver software
    apt: pkg={{ item }} state=latest
    with_items:
    - certbot
    - nginx
    - php7.1
    - php7.1-fpm      # if not CGI
    - php7.1-cli
    - php7.1-common
    - php7.1-curl
    - php7.1-gd
    - php7.1-mcrypt
    - php7.1-mysql
    - php7.1-zip
    - php7.1-xml
    - php7.1-bcmath
    - php7.1-mbstring
    - libxrender1 #wkhtmltopdf
    - fontconfig  #wkhtmltopdf
    - xvfb        #wkhtmltopdf
    - python-mysqldb          #required for ansible to use mysql
    - ghostscript             #required for gs command to generate JPG of PDF

    # don't install a local mysql server if you don't need it (to allow remote connections comment out bind-address wherever it is)
    #- mysql-server

    # try to have better local dev tools instead of installing a client
    #- mysql-client

    # if apache
    #- apache2

    # for apache cgi
    #- libapache2-mod-php7.1
    #- libapache2-mpm-itk      #simple security settings

  # wkhtmltopdf on ubuntu 16.04 doesn't work with a newer libssl dev
  - name: force downgrade of libssl-dev for wkhtmltopdf 12.4
    shell: |
      apt install libssl-dev=1.0.2g-1ubuntu4.8;
      apt-mark hold libssl-dev;

  # cd /usr/local/bin && wget ... && tar -xf ... && rm ...
  - name: download and extract wkhtmltopdf
    unarchive:
      src: https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
      dest: /usr/local/bin
      remote_src: yes

  - name: expose the wkhtmltox binaries
    shell: |
      rsync -rvt /usr/local/bin/wkhtmltox/bin/* /usr/local/bin/;
      rm -rf /usr/local/bin/wkhtmltox;

## PDF notes
# you may need arial too
# add contrib onto main two lines in sources.list
# apt-get update && apt-get install msttcorefonts

  # composer doesn't currently have a latest stable version link so you have to check yourself at https://getcomposer.org/download/
  - name: install composer globally
    get_url:
      url: https://getcomposer.org/download/1.5.2/composer.phar
      dest: /usr/local/bin/composer
      mode: 0755

  # if apache
  #- name: activate required apache2 modules
  #  shell: a2enmod cgi expires headers rewrite ssl

  #- name: adjust apache2 SSL settings
  #  command: "sed --in-place {{ item }} /etc/apache2/mods-available/ssl.conf"
  #  with_items:
  #  - "'s/#SSLHonorCipherOrder on/SSLHonorCipherOrder on/'"
  #  - "'s/SSLCipherSuite HIGH:!aNULL/SSLCipherSuite \"EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH EDH+aRS !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4\"/'"

# expires conf needs adding
# deflate conf missing svg and fonts
# status needs looking at too
# - when enabling status be sure to not enable localhost access (might be default?), use it on a specific domain name to prevent leaking of information about the server
# access_compat is probably enabled by default http://www.the-art-of-web.com/system/apache-authorization/

# logrotate for apache might need modifying
# - change to weekly
# - leave rotate at 14?
# - change to 755
# - update title for website logs

  - name: set PHP preferred defaults
    command: "sed --in-place {{ item }} /etc/php5/apache2/php.ini"
    with_items:
    - "'s/allow_url_fopen = On/allow_url_fopen = Off/'"
    - "'s/;date.timezone =/date.timezone = Europe\\/London/'"
    - "'s/post_max_size = 8M/post_max_size = 15M/'"
    - "'s/upload_max_filesize = 2M/upload_max_filesize = 15M/'"

  # if apache
  #- name: restart apache2 for updated settings
  #  shell: apachectl -k graceful

  handlers:
  - include: includes/handlers/webmin.yml #required from common include

- include: apply-firewall.yml servers={{ newwebserver }}